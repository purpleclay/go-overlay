# Copyright (c) 2023 - 2024 Purple Clay
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# in the Software without restriction, including without limitation the rights
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

name: sync-prev
on:
  schedule:
    - cron: "0 2 * * *"
  workflow_dispatch:
  pull_request: # TODO: remove this

jobs:
  sync-with-godev:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.21.6"

      - name: Detect Prev Release
        run: |
          latest=$(go run main.go detect)
          major=$(echo "$latest" | cut -d'.' -f1 | sed 's/go//')
          minor=$(echo "$latest" | cut -d'.' -f2)
          minor=$((minor - 1))

          echo "PREV_VERSION=$(go run main.go detect 'go${major}.${minor}')" >> $GITHUB_ENV
        working-directory: "./scrape"

      - name: Check Manifest Exists
        run: |
          version="${{ env.PREV_VERSION }}"
          nix_dir=${version%.*}
          nix_version="${version/go/}"
          nix_version="${nix_version//./-}"
          echo "MANIFEST_EXISTS=$(test -f ${nix_dir}/${nix_version}.nix && echo "true")" >> $GITHUB_ENV
          echo "NIX_FILE=manifests/${nix_dir}/${nix_version}.nix" >> $GITHUB_ENV
        working-directory: "./manifests"

      - name: Generate Manifest
        if: ${{ env.MANIFEST_EXISTS != 'true' }}
        run: |
          go run main.go --release ${{ env.PREV_VERSION }} --output "../${{ env.NIX_FILE }}"
        working-directory: "./scrape"

      - name: Import GPG key
        if: ${{ env.MANIFEST_EXISTS != 'true' }}
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Commit and Push Manifest
        if: ${{ env.MANIFEST_EXISTS != 'true' }}
        run: |
          git add "${{ env.NIX_FILE }}"
          git commit -S -m "chore: "
          git push
